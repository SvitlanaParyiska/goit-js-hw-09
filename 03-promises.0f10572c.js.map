{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAYC,SAASL,EAAMM,OAC/B,MAAMC,EAAWF,SAASJ,EAAKK,OACzBE,EAAaH,SAASH,EAAOI,OACnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EAAG,CAEvCzB,EADiByB,EACOL,GACrBM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,IAGnDkB,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayNumb = parseInt(delay.value);\n  const stepNumb = parseInt(step.value);\n  const amountNumb = parseInt(amount.value);\n  for (let i = 1; i <= amountNumb; i += 1) {\n    const position = i;\n    createPromise(position, delayNumb)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNumb += stepNumb;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayNumb","parseInt","value","stepNumb","amountNumb","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.0f10572c.js.map"}